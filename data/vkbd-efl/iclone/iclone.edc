/*
 * Based on http://svn.enlightenment.org/svn/e/trunk/BINDINGS/python/python-edje/examples/evas-demo/02-vkbd/
 */
images {
   image: "background.png" COMP;
   image: "keyboard-background.png" COMP;
   image: "key-default.png" COMP;
   image: "key-default-selected.png" COMP;
   image: "key-special.png" COMP;
   image: "key-special-selected.png" COMP;
   image: "backspace.png" COMP;
   image: "backspace-selected.png" COMP;
   image: "shift.png" COMP;
   image: "shift-selected.png" COMP;
}

styles {
   style {
      name: "field_style";
      base: "font=Sans font_size=28 align=left valign=top color=#000 wrap=word style=shadow shadow_color=#666";
      tag: "br" "  \n";
   }
}

collections {
   group {
      name: "main";

      min: 800 480;

      parts {
         part {
            name: "background";
            type: IMAGE;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 0.0;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "background.png";
                  border: 13 13 13 13;
               }
            }
         }

         part {
            name: "field_bg";
            mouse_events: 0;
            type: RECT;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1 {
                  relative: 0.0 0.0;
                  offset: 13 13;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -14 -278;
               }
            }
         }

         part {
            name: "field";
            mouse_events: 0;
            type: TEXTBLOCK;
            description {
               state: "default" 0.0;
               color: 30 30 30 255;
               rel1 {
                  to: "field_bg";
                  relative: 0 0;
                  offset: 4 4;
               }
               rel2 {
                  to: "field_bg";
                  relative: 1 1;
                  offset: -5 -5;
               }
               text {
                  style: "field_style";
               }
            }
         }

         part {
            name: "keyboard-background";
            mouse_events: 1;
            pointer_mode: NOGRAB;
            type: IMAGE;
            description {
               state: "default" 0.0;
               rel1 {
                  relative: 0.0 1.0;
                  offset: 0 -280;
               }
               rel2 {
                  relative: 1.0 1.0;
                  offset: -1 -1;
               }
               image {
                  normal: "keyboard-background.png";
                  border: 13 13 0 0;
               }
            }
         }
      }

#define KEY_GROUP(_name)                                               \
      parts {                                                          \
         part {                                                        \
            name: _name"_clip";                                        \
            type: RECT;                                                \
            description {                                              \
               state: "default" 0.0;                                   \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: 0 0;                                         \
               }                                                       \
               rel2 {                                                  \
                  relative: 1.0 1.0;                                   \
                  offset: -1 -1;                                       \
               }                                                       \
            }                                                          \
            description {                                              \
               state: "hidden" 0.0;                                    \
               inherit: "default" 0.0;                                 \
               visible: 0;                                             \
            }                                                          \
         }                                                             \
         part {                                                        \
            name: _name;                                               \
            type: GROUP;                                               \
            source: _name;                                             \
            clip_to: _name"_clip";                                     \
            description {                                              \
               state: "default" 0.0;                                   \
               min: 685 234;                                           \
               max: 685 234;                                           \
               rel1 {                                                  \
                  relative: 0.5  1.0;                                  \
                  offset: -342 -264;                                   \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.5 1.0;                                   \
                  offset: 342 -10;                                     \
               }                                                       \
            }                                                          \
         }                                                             \
      }                                                                \
      programs {                                                       \
         program {                                                     \
            name: "show-"_name;                                        \
            action: STATE_SET "default" 0.0;                           \
            target: _name"_clip";                                      \
         }                                                             \
         program {                                                     \
            name: "hide-"_name;                                        \
            action: STATE_SET "hidden" 0.0;                            \
            target: _name"_clip";                                      \
         }                                                             \
      }

      KEY_GROUP("alphanum")
      KEY_GROUP("numeric")
      KEY_GROUP("special-1")
      KEY_GROUP("special-2")
      KEY_GROUP("fixed")

      programs {
         program {
            name: "alphanum_show";
            signal: "show,alphanumeric";
            after: "show-alphanum";
            after: "hide-numeric";
            after: "hide-special-1";
            after: "hide-special-2";
            after: "show-fixed";
         }

         program {
            name: "numeric_show";
            signal: "show,numeric";
            after: "show-numeric";
            after: "hide-alphanum";
            after: "hide-special-1";
            after: "hide-special-2";
            after: "hide-fixed";
         }

         program {
            name: "special-1_show";
            signal: "show,special,1";
            after: "show-special-1";
            after: "hide-numeric";
            after: "hide-alphanum";
            after: "hide-special-2";
            after: "show-fixed";
         }

         program {
            name: "special-2_show";
            signal: "show,special,2";
            after: "show-special-2";
            after: "hide-numeric";
            after: "hide-alphanum";
            after: "hide-special-1";
            after: "show-fixed";
         }

         program {
            name: ".?123_clicked";
            signal: "key_down";
            source: "alphanum:.?123";
            after: "special-1_show";
         }
         program {
            name: "special-1_ABC_clicked";
            signal: "key_down";
            source: "special-1:ABC";
            after: "alphanum_show";
         }
         program {
            name: "special-2_ABC_clicked";
            signal: "key_down";
            source: "special-2:ABC";
            after: "alphanum_show";
         }
         program {
            name: "#+=_clicked";
            signal: "key_down";
            source: "special-1:#+=";
            after: "special-2_show";
         }
         program {
            name: ".?12_clicked";
            signal: "key_down";
            source: "special-2:.?12";
            after: "special-1_show";
         }
         program {
            name: "init";
            signal: "show";
            after: "alphanum_show";
         }
      }
   }

   group {
      name: "alphanum";

#define MOUSE_DOWN_UP_PROGRAMS                                         \
      script {                                                         \
          public shift_pressed = 0;                                    \
          public mouse_down = 0;                                       \
          public pressed_key;                                          \
                                                                       \
          _set_key_pressed(_key[]) {                                   \
             new _cur[10];                                             \
             new _prg[30];                                             \
             get_str(pressed_key, _cur, 10);                           \
             if (strlen(_cur) > 0) {                                   \
                snprintf(_prg, 30, "key-release-%s", _cur);            \
                run_program(get_program_id(_prg));                     \
             }                                                         \
             set_str(pressed_key, _key);                               \
             snprintf(_prg, 30, "key-press-%s", _key);                 \
             run_program(get_program_id(_prg));                        \
          }                                                            \
          _set_key_released(_key[]) {                                  \
             new _prg[30];                                             \
             set_str(pressed_key, "");                                 \
             snprintf(_prg, 30, "key-release-%s", _key);               \
             run_program(get_program_id(_prg));                        \
          }                                                            \
      }                                                                \
      programs {                                                       \
         program {                                                     \
            name: "mouse-down";                                        \
            signal: "mouse,down,1";                                    \
            source: "*";                                               \
            script {                                                   \
               set_int(mouse_down, 1);                                 \
            }                                                          \
         }                                                             \
         program {                                                     \
            name: "mouse-up";                                          \
            signal: "mouse,up,1";                                      \
            source: "*";                                               \
            script {                                                   \
               set_int(mouse_down, 0);                                 \
            }                                                          \
         }                                                             \
      }

      MOUSE_DOWN_UP_PROGRAMS
      parts {
#define INIT_HSPACE 0
#define KEY_HSPACE 70
#define KEY_HPOS(index)  KEY_HSPACE * index + INIT_HSPACE

#define FIRST_ROW 0

#define CLICK_AREA_W 68
#define CLICK_AREA_H 70
#define CLICK_AREA_DX 27
#define CLICK_AREA_DY 21
#define SKEY_FULL(key_low, key_up, key_name, x, y, lbl_dx, lbl_dy)     \
         part {                                                        \
            name: "key-bg-"key_name;                                   \
            type: RECT;                                                \
            pointer_mode: NOGRAB;                                      \
            description {                                              \
               state: "default" 0.0;                                   \
               min: CLICK_AREA_W CLICK_AREA_H;                         \
               max: CLICK_AREA_W CLICK_AREA_H;                         \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + CLICK_AREA_DX) (y + CLICK_AREA_DY);     \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + CLICK_AREA_DX) (y + CLICK_AREA_DY);     \
               }                                                       \
               color: 0 0 0 0;                                         \
            }                                                          \
         }                                                             \
         part {                                                        \
            name: "key-img-"key_name;                                  \
            type: IMAGE;                                               \
            mouse_events: 0;                                           \
            description {                                              \
               state: "default" 0.0;                                   \
               min: 54 54;                                             \
               max: 54 54;                                             \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + 27) (y + 27);                           \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + 27) (y + 27);                           \
               }                                                       \
               image.normal: "key-default.png";                        \
            }                                                          \
            description {                                              \
               state: "down" 0.0;                                      \
               inherit: "default" 0.0;                                 \
               visible: 0;                                             \
            }                                                          \
         }                                                             \
         part {                                                        \
           name: "key-lbl-"key_name;                                   \
           type: TEXT;                                                 \
           mouse_events: 0;                                            \
           effect: OUTLINE;                                            \
           description {                                               \
              state: "default" 0.0;                                    \
              color: 0 0 0 255;                                        \
              color2: 100 100 100 255;                                 \
              color3: 100 100 100 255;                                 \
              rel1 {                                                   \
                 to: "key-img-"key_name;                               \
                 relative: 0.0 0.0;                                    \
                 offset: (8 + lbl_dx) (4 + lbl_dy);                    \
              }                                                        \
              rel2 {                                                   \
                 to: "key-img-"key_name;                               \
                 relative: 1.0 0.0;                                    \
                 offset: -1 48;                                        \
              }                                                        \
              text {                                                   \
                 font: "Sans";                                         \
                 size: 32;                                             \
                 text: key_low;                                        \
              }                                                        \
            }                                                          \
            description {                                              \
               state: "down" 0.0;                                      \
               inherit: "default" 0.0;                                 \
               visible: 0;                                             \
            }                                                          \
         }                                                             \
         part {                                                        \
            name: "key-img-zoom-"key_name;                             \
            type: IMAGE;                                               \
            mouse_events: 0;                                           \
            description {                                              \
               state: "default" 0.0;                                   \
               min: 100 150;                                           \
               max: 100 150;                                           \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + 26) (y - 21);                           \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + 26) (y - 21);                           \
               }                                                       \
               image.normal: "key-default-selected.png";               \
               color: 255 255 255 0;                                   \
               visible: 0;                                             \
            }                                                          \
            description {                                              \
               state: "down" 0.0;                                      \
               inherit: "default" 0.0;                                 \
               color: 255 255 255 255;                                 \
               visible: 1;                                             \
            }                                                          \
         }                                                             \
         part {                                                        \
            name: "key-lbl-zoom-"key_name;                             \
            type: TEXT;                                                \
            mouse_events: 0;                                           \
            description {                                              \
               state: "default" 0.0;                                   \
               color: 0 0 0 0;                                         \
               rel1 {                                                  \
                  to: "key-img-zoom-"key_name;                         \
                  relative: 0.0 0.0;                                   \
                  offset: 8 24;                                        \
               }                                                       \
               rel2 {                                                  \
                  to: "key-img-zoom-"key_name;                         \
                  relative: 1.0 0.0;                                   \
                  offset: -1 48;                                       \
               }                                                       \
               text {                                                  \
                  font: "Sans";                                        \
                  size: 48;                                            \
                  text: key_low;                                       \
               }                                                       \
               visible: 0;                                             \
            }                                                          \
            description {                                              \
               state: "down" 0.0;                                      \
               inherit: "default" 0.0;                                 \
               color: 0 0 0 255;                                       \
               visible: 1;                                             \
            }                                                          \
         }                                                             \
         programs {                                                    \
            program {                                                  \
               name: "key-mouse-in-"key_name;                          \
               signal: "mouse,in";                                     \
               source: "key-bg-"key_name;                              \
               script {                                                \
                  if (get_int(mouse_down) == 0)                        \
                     return;                                           \
                  _set_key_pressed(key_name);                          \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-mouse-out-"key_name;                         \
               signal: "mouse,out";                                    \
               source: "key-bg-"key_name;                              \
               script {                                                \
                  if (get_int(mouse_down) == 0)                        \
                     return;                                           \
                  _set_key_released(key_name);                         \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-mouse-down-"key_name;                        \
               signal: "mouse,down,1";                                 \
               source: "key-bg-"key_name;                              \
               script {                                                \
                  _set_key_pressed(key_name);                          \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-mouse-up-"key_name;                          \
               signal: "mouse,up,1";                                   \
               source: "key-bg-"key_name;                              \
               script {                                                \
                  if (get_int(shift_pressed) == 0)                     \
                     emit("key_down", key_low);                        \
                  else                                                 \
                     emit("key_down", key_up);                         \
                  _set_key_released(key_name);                         \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-press-"key_name;                             \
               source: "key-bg-"key_name;                              \
               action: STATE_SET "down" 0.0;                           \
               target: "key-img-"key_name;                             \
               target: "key-lbl-"key_name;                             \
               target: "key-img-zoom-"key_name;                        \
               target: "key-lbl-zoom-"key_name;                        \
            }                                                          \
            program {                                                  \
               name: "key-release-"key_name;                           \
               source: "key-bg-"key_name;                              \
               action: STATE_SET "default" 0.0;                        \
               transition: LINEAR 0.2;                                 \
               target: "key-img-"key_name;                             \
               target: "key-lbl-"key_name;                             \
               target: "key-img-zoom-"key_name;                        \
               target: "key-lbl-zoom-"key_name;                        \
            }                                                          \
            program {                                                  \
               name: "shift-pressed-"key_name;                         \
               signal: "key_down";                                     \
               source: "shift";                                        \
               script {                                                \
                  new _id = get_part_id("key-lbl-"key_name);           \
                  new _id_zoom = get_part_id("key-lbl-zoom-"key_name); \
                  if (get_int(shift_pressed) == 0) {                   \
                     set_text(_id, key_low);                           \
                     set_text(_id_zoom, key_low);                      \
                  } else {                                             \
                     set_text(_id, key_up);                            \
                     set_text(_id_zoom, key_up);                       \
                  }                                                    \
               }                                                       \
            }                                                          \
         }

#define KEY_FULL(low, up, x, y, lbl_dx, lbl_dy) SKEY_FULL(low, up, low, x, y, lbl_dx, lbl_dy)
#define SKEY(name, text, x, y) SKEY_FULL(name, name, text, x, y, 0, 0)
#define KEY(v, x, y) SKEY(v, v, x, y)
         KEY_FULL("q", "Q", KEY_HPOS(0), FIRST_ROW, -2, 0)
         KEY_FULL("w", "W", KEY_HPOS(1), FIRST_ROW, -5, 0)
         KEY_FULL("e", "E", KEY_HPOS(2), FIRST_ROW, 0, 0)
         KEY_FULL("r", "R", KEY_HPOS(3), FIRST_ROW, 0, 0)
         KEY_FULL("t", "T", KEY_HPOS(4), FIRST_ROW, -4, 0)
         KEY_FULL("y", "Y", KEY_HPOS(5), FIRST_ROW, -6, 0)
         KEY_FULL("u", "U", KEY_HPOS(6), FIRST_ROW, 0, 0)
         KEY_FULL("i", "I", KEY_HPOS(7), FIRST_ROW, 2, 0)
         KEY_FULL("o", "O", KEY_HPOS(8), FIRST_ROW, -2, 0)
         KEY_FULL("p", "P", KEY_HPOS(9), FIRST_ROW, 0, 0)

#undef INIT_HSPACE
#define INIT_HSPACE 35
#define SECOND_ROW 60

#undef CLICK_AREA_H
#undef CLICK_AREA_DY
#define CLICK_AREA_H 58
#define CLICK_AREA_DY 27
         KEY_FULL("a", "A", KEY_HPOS(0), SECOND_ROW, -8, 0)
         KEY_FULL("s", "S", KEY_HPOS(1), SECOND_ROW, 0, 0)
         KEY_FULL("d", "D", KEY_HPOS(2), SECOND_ROW, 0, 0)
         KEY_FULL("f", "F", KEY_HPOS(3), SECOND_ROW, 0, 0)
         KEY_FULL("g", "G", KEY_HPOS(4), SECOND_ROW, -2, 2)
         KEY_FULL("h", "H", KEY_HPOS(5), SECOND_ROW, 2, 0)
         KEY_FULL("j", "J", KEY_HPOS(6), SECOND_ROW, -6, 0)
         KEY_FULL("k", "K", KEY_HPOS(7), SECOND_ROW, 0, 0)
         KEY_FULL("l", "L", KEY_HPOS(8), SECOND_ROW, 0, 0)

#undef INIT_HSPACE
#define INIT_HSPACE 105
#define THIRD_ROW 120
         KEY_FULL("z", "Z", KEY_HPOS(0), THIRD_ROW, 0, 0)
         KEY_FULL("x", "X", KEY_HPOS(1), THIRD_ROW, -4, 0)
         KEY_FULL("c", "C", KEY_HPOS(2), THIRD_ROW, -4, 0)
         KEY_FULL("v", "V", KEY_HPOS(3), THIRD_ROW, -6, 0)
         KEY_FULL("b", "B", KEY_HPOS(4), THIRD_ROW, 2, 0)
         KEY_FULL("n", "N", KEY_HPOS(5), THIRD_ROW, 2, 0)
         KEY_FULL("m", "M", KEY_HPOS(6), THIRD_ROW, 0, 0)

#define FOURTH_ROW 190
#define KEY_SPECIAL(val, x, y, w)                                      \
         part {                                                        \
            name: "key-bg-"val;                                        \
            type: RECT;                                                \
            pointer_mode: NOGRAB;                                      \
            description {                                              \
               state: "default" 0.0;                                   \
               min: w 54;                                              \
               max: w 54;                                              \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + w/2) (y + 27);                          \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + w/2) (y + 27);                          \
               }                                                       \
               color: 0 0 0 0;                                         \
            }                                                          \
         }                                                             \
         part {                                                        \
            name: "key-img-"val;                                       \
            type: IMAGE;                                               \
            mouse_events: 0;                                           \
            description {                                              \
               state: "default" 0.0;                                   \
               min: w 54;                                              \
               max: w 54;                                              \
               rel1 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + w/2) (y + 27);                          \
               }                                                       \
               rel2 {                                                  \
                  relative: 0.0 0.0;                                   \
                  offset: (x + w/2) (y + 27);                          \
               }                                                       \
               image {                                                 \
                  normal: "key-special.png";                           \
                  border: 9 9 9 9;                                     \
               }                                                       \
            }                                                          \
            description {                                              \
               state: "down" 0.0;                                      \
               inherit: "default" 0.0;                                 \
               image {                                                 \
                  normal: "key-special-selected.png";                  \
                  border: 9 9 9 9;                                     \
               }                                                       \
            }                                                          \
         }                                                             \
         part {                                                        \
           name: "key-lbl-"val;                                        \
           type: TEXT;                                                 \
           mouse_events: 0;                                            \
           effect: OUTLINE;                                            \
           description {                                               \
              state: "default" 0.0;                                    \
              color: 240 240 240 255;                                  \
              color2: 110 110 110 255;                                 \
              color3: 110 110 110 255;                                 \
              rel1 {                                                   \
                 to: "key-bg-"val;                                     \
                 relative: 0.0 0.0;                                    \
                 offset: 8 4;                                          \
              }                                                        \
              rel2 {                                                   \
                 to: "key-bg-"val;                                     \
                 relative: 1.0 1.0;                                    \
                 offset: -1 -1;                                        \
              }                                                        \
              text {                                                   \
                 font: "Sans";                                         \
                 size: 24;                                             \
                 text: val;                                            \
              }                                                        \
           }                                                           \
           description {                                               \
              state: "down" 0.0;                                       \
              inherit: "default" 0.0;                                  \
              color: 200 200 200 255;                                  \
              color2: 90 90 90 255;                                    \
              color3: 90 90 90 255;                                    \
           }                                                           \
         }                                                             \
         programs {                                                    \
            program {                                                  \
               name: "key-down-"val;                                   \
               signal: "mouse,up,1";                                   \
               source: "key-bg-"val;                                   \
               script {                                                \
                  emit("key_down", val);                               \
                  run_program(PROGRAM:"key-release-"val);              \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-mouse-in-"val;                               \
               signal: "mouse,in";                                     \
               source: "key-bg-"val;                                   \
               script {                                                \
                  if (get_int(mouse_down) == 0)                        \
                     return;                                           \
                  run_program(PROGRAM:"key-press-"val);                \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-mouse-out-"val;                              \
               signal: "mouse,out";                                    \
               source: "key-bg-"val;                                   \
               script {                                                \
                  if (get_int(mouse_down) == 0)                        \
                     return;                                           \
                  run_program(PROGRAM:"key-release-"val);              \
               }                                                       \
            }                                                          \
            program {                                                  \
               name: "key-press-"val;                                  \
               signal: "mouse,down,1";                                 \
               source: "key-bg-"val;                                   \
               action: STATE_SET "down" 0.0;                           \
               target: "key-img-"val;                                  \
               target: "key-lbl-"val;                                  \
            }                                                          \
            program {                                                  \
               name: "key-release-"val;                                \
               action: STATE_SET "default" 0.0;                        \
               transition: LINEAR 0.2;                                 \
               target: "key-img-"val;                                  \
               target: "key-lbl-"val;                                  \
            }                                                          \
         }

         KEY_SPECIAL(".?123", 0, FOURTH_ROW, 158)

#undef INIT_HSPACE
#define INIT_HSPACE 0
         part {
            name: "key-bg-shift";
            type: RECT;
            pointer_mode: NOGRAB;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (INIT_HSPACE + 44) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (INIT_HSPACE + 44) (THIRD_ROW + 27);
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "key-img-shift";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (INIT_HSPACE + 44) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (INIT_HSPACE + 44) (THIRD_ROW + 27);
               }
               image {
                  normal: "key-special.png";
                  border: 9 9 9 9;
               }
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "key-special-selected.png";
                  border: 9 9 9 9;
               }
            }
         }
         part {
           name: "key-lbl-shift";
           type: IMAGE;
           mouse_events: 0;
           description {
              state: "default" 0.0;
              max: 32 32;
              min: 32 32;
              rel1 {
                 to: "key-bg-shift";
                 relative: 0.5 0.5;
              }
              rel2 {
                 to: "key-bg-shift";
                 relative: 0.5 0.5;
              }
              image.normal: "shift.png";
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image.normal: "shift-selected.png";
            }
         }
         programs {
            program {
               name: "key-press-shift";
               signal: "mouse,down,1";
               source: "key-bg-shift";
               action: STATE_SET "down" 0.0;
               transition: LINEAR 0.1;
               target: "key-img-shift";
               target: "key-lbl-shift";
            }
            program {
               name: "key-release-shift";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.1;
               target: "key-img-shift";
               target: "key-lbl-shift";
            }
            program {
               name: "key-mouse-in-shift";
               signal: "mouse,in";
               source: "key-bg-shift";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-press-shift");
               }
            }
            program {
               name: "key-mouse-out-shift";
               signal: "mouse,out";
               source: "key-bg-shift";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-release-shift");
               }
            }
            program {
               name: "key-down-shift";
               signal: "mouse,up,1";
               source: "key-bg-shift";
               script {
                  emit("key_down", "shift");
                  if (get_int(shift_pressed) == 0) {
                     run_program(PROGRAM:"key-press-shift");
                     set_int(shift_pressed, 1);
                  } else {
                     run_program(PROGRAM:"key-release-shift");
                     set_int(shift_pressed, 0);
                  }
               }
            }
         }
      }
   }

   group {
      name: "special-1";

      MOUSE_DOWN_UP_PROGRAMS
      parts {
#undef KEY_HSPACE
#define KEY_HSPACE 70
#define INIT_HSPACE 0
         KEY("1", KEY_HPOS(0), FIRST_ROW)
         KEY("2", KEY_HPOS(1), FIRST_ROW)
         KEY("3", KEY_HPOS(2), FIRST_ROW)
         KEY("4", KEY_HPOS(3), FIRST_ROW)
         KEY("5", KEY_HPOS(4), FIRST_ROW)
         KEY("6", KEY_HPOS(5), FIRST_ROW)
         KEY("7", KEY_HPOS(6), FIRST_ROW)
         KEY("8", KEY_HPOS(7), FIRST_ROW)
         KEY("9", KEY_HPOS(8), FIRST_ROW)
         KEY("0", KEY_HPOS(9), FIRST_ROW)

#undef INIT_HSPACE
#define INIT_HSPACE 35
         SKEY("-", "dash", KEY_HPOS(0), SECOND_ROW)
         SKEY("/", "slash", KEY_HPOS(1), SECOND_ROW)
         SKEY(":", "colon", KEY_HPOS(2), SECOND_ROW)
         SKEY(";", "semi_colon", KEY_HPOS(3), SECOND_ROW)
         SKEY("(", "open_par", KEY_HPOS(4), SECOND_ROW)
         SKEY(")", "close_par", KEY_HPOS(5), SECOND_ROW)
         SKEY("$", "dollar", KEY_HPOS(6), SECOND_ROW)
         SKEY("&", "amp", KEY_HPOS(7), SECOND_ROW)
         SKEY("@", "at", KEY_HPOS(8), SECOND_ROW)

#undef INIT_HSPACE
#define INIT_HSPACE 105
         SKEY(".", "dot", KEY_HPOS(0), THIRD_ROW)
         SKEY(",", "comma", KEY_HPOS(1), THIRD_ROW)
         SKEY("?", "question", KEY_HPOS(2), THIRD_ROW)
         SKEY("!", "exclamation", KEY_HPOS(3), THIRD_ROW)
         SKEY("`", "back_quote", KEY_HPOS(4), THIRD_ROW)
         SKEY("'", "single_quote", KEY_HPOS(5), THIRD_ROW)
         SKEY("\"", "double_quote", KEY_HPOS(6), THIRD_ROW)

         KEY_SPECIAL("#+=", 0, THIRD_ROW, 80)
         KEY_SPECIAL("ABC", 0, FOURTH_ROW, 158)
      }
   }

   group {
      name: "special-2";

      MOUSE_DOWN_UP_PROGRAMS
      parts {
#undef INIT_HSPACE
#define INIT_HSPACE 0
         SKEY("*", "star", KEY_HPOS(0), FIRST_ROW)
         SKEY("+", "plus", KEY_HPOS(1), FIRST_ROW)
         SKEY("=", "equal", KEY_HPOS(2), FIRST_ROW)
         SKEY("_", "underline", KEY_HPOS(3), FIRST_ROW)
         SKEY("#", "hash", KEY_HPOS(4), FIRST_ROW)
         SKEY("%", "percent", KEY_HPOS(5), FIRST_ROW)
         SKEY("~", "tilde", KEY_HPOS(6), FIRST_ROW)
         SKEY("^", "circumflex", KEY_HPOS(7), FIRST_ROW)
         SKEY("\\", "backslash", KEY_HPOS(8), FIRST_ROW)
         SKEY("|", "vert_bar", KEY_HPOS(9), FIRST_ROW)

         SKEY("<", "less", KEY_HPOS(2), SECOND_ROW)
         SKEY(">", "greater", KEY_HPOS(3), SECOND_ROW)
         SKEY("[", "open_bracket", KEY_HPOS(4), SECOND_ROW)
         SKEY("]", "close_bracket", KEY_HPOS(5), SECOND_ROW)
         SKEY("{", "open_brace", KEY_HPOS(6), SECOND_ROW)
         SKEY("}", "close_brace", KEY_HPOS(7), SECOND_ROW)

         KEY_SPECIAL(".?12", 0, THIRD_ROW, 80)
         KEY_SPECIAL("ABC", 0, FOURTH_ROW, 158)
      }
   }

   group {
      name: "fixed";

      script {
          public mouse_down = 0;
      }

      programs {
            program {
               name: "mouse-down";
               signal: "mouse,down,1";
               source: "*";
               script {
                  set_int(mouse_down, 1);
               }
            }
            program {
               name: "mouse-up";
               signal: "mouse,up,1";
               source: "*";
               script {
                  set_int(mouse_down, 0);
                  emit("MOUSE", "UP");
               }
            }
      }

      parts {
         part {
            name: "key-bg-backspace";
            type: RECT;
            pointer_mode: NOGRAB;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "key-img-backspace";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               image {
                  normal: "key-special.png";
                  border: 9 9 9 9;
               }
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "key-special-selected.png";
                  border: 9 9 9 9;
               }
            }
         }
         part {
           name: "key-lbl-backspace";
           type: IMAGE;
           mouse_events: 0;
           description {
              state: "default" 0.0;
              max: 40 32;
              min: 40 32;
              rel1 {
                 to: "key-bg-backspace";
                 relative: 0.5 0.5;
              }
              rel2 {
                 to: "key-bg-backspace";
                 relative: 0.5 0.5;
              }
              image.normal: "backspace.png";
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image.normal: "backspace-selected.png";
            }
         }
         programs {
            program {
               name: "key-down-backspace";
               signal: "mouse,up,1";
               source: "key-bg-backspace";
               script {
                  emit("key_down", "backspace");
                  run_program(PROGRAM:"key-release-backspace");
               }
            }
            program {
               name: "key-mouse-in-backspace";
               signal: "mouse,in";
               source: "key-bg-backspace";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-press-backspace");
               }
            }
            program {
               name: "key-mouse-out-backspace";
               signal: "mouse,out";
               source: "key-bg-backspace";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-release-backspace");
               }
            }
            program {
               name: "key-press-backspace";
               signal: "mouse,down,1";
               source: "key-bg-backspace";
               action: STATE_SET "down" 0.0;
               target: "key-img-backspace";
               target: "key-lbl-backspace";
            }
            program {
               name: "key-release-backspace";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.1;
               target: "key-img-backspace";
               target: "key-lbl-backspace";
            }
         }

         part {
            name: "key-bg-space";
            type: RECT;
            pointer_mode: NOGRAB;
            description {
               state: "default" 0.0;
               min: 355 68;
               max: 355 68;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (175 + 167) (FOURTH_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (175 + 167) (FOURTH_ROW + 27);
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "key-img-space";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 335 54;
               max: 335 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (175 + 167) (FOURTH_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (175 + 167) (FOURTH_ROW + 27);
               }
               image {
                  normal: "key-default.png";
                  border: 9 9 9 9;
               }
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               color: 160 160 160 255;
            }
         }
         part {
           name: "key-lbl-space";
           type: TEXT;
           mouse_events: 0;
           effect: OUTLINE;
           description {
              state: "default" 0.0;
              color: 0 0 0 255;
              color2: 100 100 100 255;
              color3: 100 100 100 255;
              rel1 {
                 to: "key-img-space";
                 relative: 0.0 0.0;
                 offset: 8 4;
              }
              rel2 {
                 to: "key-img-space";
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
              text {
                 font: "Sans";
                 size: 28;
                 text: "space";
              }
           }
         }
         programs {
            program {
               name: "key-down-space";
               signal: "mouse,up,1";
               source: "key-bg-space";
               script {
                  emit("key_down", " ");
                  run_program(PROGRAM:"key-release-space");
               }
            }
            program {
               name: "key-mouse-in-space";
               signal: "mouse,in";
               source: "key-bg-space";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-press-space");
               }
            }
            program {
               name: "key-mouse-out-space";
               signal: "mouse,out";
               source: "key-bg-space";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-release-space");
               }
            }
            program {
               name: "key-press-space";
               signal: "mouse,down,1";
               source: "key-bg-space";
               action: STATE_SET "down" 0.0;
               target: "key-img-space";
            }
            program {
               name: "key-release-space";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.2;
               target: "key-img-space";
            }
         }

         KEY_SPECIAL("enter", 525, FOURTH_ROW, 158)
      }
   }

   group {
      name: "numeric";
      MOUSE_DOWN_UP_PROGRAMS

      parts {
#undef KEY_HSPACE
#define KEY_HSPACE 70
#undef INIT_HSPACE
#define INIT_HSPACE 35
         KEY("1", KEY_HPOS(3), FIRST_ROW)
         KEY("2", KEY_HPOS(4), FIRST_ROW)
         KEY("3", KEY_HPOS(5), FIRST_ROW)

         KEY("4", KEY_HPOS(3), SECOND_ROW)
         KEY("5", KEY_HPOS(4), SECOND_ROW)
         KEY("6", KEY_HPOS(5), SECOND_ROW)

         KEY("7", KEY_HPOS(3), THIRD_ROW)
         KEY("8", KEY_HPOS(4), THIRD_ROW)
         KEY("9", KEY_HPOS(5), THIRD_ROW)

#undef FOURTH_ROW
#define FOURTH_ROW 180
         SKEY("*", "star", KEY_HPOS(3), FOURTH_ROW)
         KEY("0", KEY_HPOS(4), FOURTH_ROW)
         SKEY("#", "hash", KEY_HPOS(5), FOURTH_ROW)

         part {
            name: "key-bg-backspace";
            type: RECT;
            pointer_mode: NOGRAB;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               color: 0 0 0 0;
            }
         }
         part {
            name: "key-img-backspace";
            type: IMAGE;
            mouse_events: 0;
            description {
               state: "default" 0.0;
               min: 87 54;
               max: 87 54;
               rel1 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               rel2 {
                  relative: 0.0 0.0;
                  offset: (596 + 87/2) (THIRD_ROW + 27);
               }
               image {
                  normal: "key-special.png";
                  border: 9 9 9 9;
               }
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image {
                  normal: "key-special-selected.png";
                  border: 9 9 9 9;
               }
            }
         }
         part {
           name: "key-lbl-backspace";
           type: IMAGE;
           mouse_events: 0;
           description {
              state: "default" 0.0;
              max: 40 32;
              min: 40 32;
              rel1 {
                 to: "key-bg-backspace";
                 relative: 0.5 0.5;
              }
              rel2 {
                 to: "key-bg-backspace";
                 relative: 0.5 0.5;
              }
              image.normal: "backspace.png";
            }
            description {
               state: "down" 0.0;
               inherit: "default" 0.0;
               image.normal: "backspace-selected.png";
            }
         }
         programs {
            program {
               name: "key-down-backspace";
               signal: "mouse,up,1";
               source: "key-bg-backspace";
               script {
                  emit("key_down", "backspace");
                  run_program(PROGRAM:"key-release-backspace");
               }
            }
            program {
               name: "key-mouse-in-backspace";
               signal: "mouse,in";
               source: "key-bg-backspace";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-press-backspace");
               }
            }
            program {
               name: "key-mouse-out-backspace";
               signal: "mouse,out";
               source: "key-bg-backspace";
               script {
                  if (get_int(mouse_down) == 0)
                     return;
                  run_program(PROGRAM:"key-release-backspace");
               }
            }
            program {
               name: "key-press-backspace";
               signal: "mouse,down,1";
               source: "key-bg-backspace";
               action: STATE_SET "down" 0.0;
               target: "key-img-backspace";
               target: "key-lbl-backspace";
            }
            program {
               name: "key-release-backspace";
               action: STATE_SET "default" 0.0;
               transition: LINEAR 0.1;
               target: "key-img-backspace";
               target: "key-lbl-backspace";
            }
         }
      }
   }
}
